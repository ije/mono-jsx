#!/usr/bin/env node

import { readFile, writeFile } from "node:fs/promises";
import process from "node:process";

switch (process.argv[2]) {
  case "setup":
    setup().then(() => {
      console.log("JSX runtime setup complete.");
    });
    break;
  default:
    process.exit(0);
}

async function setup() {
  let tsConfig = Object.create(null);
  let tsConfigPath = "";
  for (const file of ["deno.json", "tsconfig.json"]) {
    try {
      const json = await readFile(file, "utf8");
      tsConfig = JSON.parse(json);
      tsConfigPath = file;
      break;
    } catch {
      // ignore
    }
  }
  tsConfig.compilerOptions = {
    ...tsConfig.compilerOptions,
    alllowJs: true,
    jsx: "react-jsx",
    jsxImportSource: "mono-jsx",
  };
  await writeFile(
    tsConfigPath || (globalThis.Deno ? "deno.json" : "tsconfig.json"),
    JSON.stringify(tsConfig, null, 2),
  );
}
